// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Geometry.proto

#ifndef PROTOBUF_INCLUDED_Geometry_2eproto
#define PROTOBUF_INCLUDED_Geometry_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Geometry_2eproto 

namespace protobuf_Geometry_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Geometry_2eproto
namespace Geometry_msg {
class Point2d;
class Point2dDefaultTypeInternal;
extern Point2dDefaultTypeInternal _Point2d_default_instance_;
class PointSigma2d;
class PointSigma2dDefaultTypeInternal;
extern PointSigma2dDefaultTypeInternal _PointSigma2d_default_instance_;
}  // namespace Geometry_msg
namespace google {
namespace protobuf {
template<> ::Geometry_msg::Point2d* Arena::CreateMaybeMessage<::Geometry_msg::Point2d>(Arena*);
template<> ::Geometry_msg::PointSigma2d* Arena::CreateMaybeMessage<::Geometry_msg::PointSigma2d>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Geometry_msg {

// ===================================================================

class Point2d : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Geometry_msg.Point2d) */ {
 public:
  Point2d();
  virtual ~Point2d();

  Point2d(const Point2d& from);

  inline Point2d& operator=(const Point2d& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point2d(Point2d&& from) noexcept
    : Point2d() {
    *this = ::std::move(from);
  }

  inline Point2d& operator=(Point2d&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Point2d& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point2d* internal_default_instance() {
    return reinterpret_cast<const Point2d*>(
               &_Point2d_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Point2d* other);
  friend void swap(Point2d& a, Point2d& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point2d* New() const final {
    return CreateMaybeMessage<Point2d>(NULL);
  }

  Point2d* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Point2d>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Point2d& from);
  void MergeFrom(const Point2d& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point2d* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 posX = 1;
  void clear_posx();
  static const int kPosXFieldNumber = 1;
  ::google::protobuf::int32 posx() const;
  void set_posx(::google::protobuf::int32 value);

  // int32 posY = 2;
  void clear_posy();
  static const int kPosYFieldNumber = 2;
  ::google::protobuf::int32 posy() const;
  void set_posy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Geometry_msg.Point2d)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 posx_;
  ::google::protobuf::int32 posy_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Geometry_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PointSigma2d : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Geometry_msg.PointSigma2d) */ {
 public:
  PointSigma2d();
  virtual ~PointSigma2d();

  PointSigma2d(const PointSigma2d& from);

  inline PointSigma2d& operator=(const PointSigma2d& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PointSigma2d(PointSigma2d&& from) noexcept
    : PointSigma2d() {
    *this = ::std::move(from);
  }

  inline PointSigma2d& operator=(PointSigma2d&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PointSigma2d& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PointSigma2d* internal_default_instance() {
    return reinterpret_cast<const PointSigma2d*>(
               &_PointSigma2d_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PointSigma2d* other);
  friend void swap(PointSigma2d& a, PointSigma2d& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PointSigma2d* New() const final {
    return CreateMaybeMessage<PointSigma2d>(NULL);
  }

  PointSigma2d* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PointSigma2d>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PointSigma2d& from);
  void MergeFrom(const PointSigma2d& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PointSigma2d* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 sigmaX = 1;
  void clear_sigmax();
  static const int kSigmaXFieldNumber = 1;
  ::google::protobuf::int32 sigmax() const;
  void set_sigmax(::google::protobuf::int32 value);

  // int32 sigmaY = 2;
  void clear_sigmay();
  static const int kSigmaYFieldNumber = 2;
  ::google::protobuf::int32 sigmay() const;
  void set_sigmay(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Geometry_msg.PointSigma2d)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 sigmax_;
  ::google::protobuf::int32 sigmay_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Geometry_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Point2d

// int32 posX = 1;
inline void Point2d::clear_posx() {
  posx_ = 0;
}
inline ::google::protobuf::int32 Point2d::posx() const {
  // @@protoc_insertion_point(field_get:Geometry_msg.Point2d.posX)
  return posx_;
}
inline void Point2d::set_posx(::google::protobuf::int32 value) {
  
  posx_ = value;
  // @@protoc_insertion_point(field_set:Geometry_msg.Point2d.posX)
}

// int32 posY = 2;
inline void Point2d::clear_posy() {
  posy_ = 0;
}
inline ::google::protobuf::int32 Point2d::posy() const {
  // @@protoc_insertion_point(field_get:Geometry_msg.Point2d.posY)
  return posy_;
}
inline void Point2d::set_posy(::google::protobuf::int32 value) {
  
  posy_ = value;
  // @@protoc_insertion_point(field_set:Geometry_msg.Point2d.posY)
}

// -------------------------------------------------------------------

// PointSigma2d

// int32 sigmaX = 1;
inline void PointSigma2d::clear_sigmax() {
  sigmax_ = 0;
}
inline ::google::protobuf::int32 PointSigma2d::sigmax() const {
  // @@protoc_insertion_point(field_get:Geometry_msg.PointSigma2d.sigmaX)
  return sigmax_;
}
inline void PointSigma2d::set_sigmax(::google::protobuf::int32 value) {
  
  sigmax_ = value;
  // @@protoc_insertion_point(field_set:Geometry_msg.PointSigma2d.sigmaX)
}

// int32 sigmaY = 2;
inline void PointSigma2d::clear_sigmay() {
  sigmay_ = 0;
}
inline ::google::protobuf::int32 PointSigma2d::sigmay() const {
  // @@protoc_insertion_point(field_get:Geometry_msg.PointSigma2d.sigmaY)
  return sigmay_;
}
inline void PointSigma2d::set_sigmay(::google::protobuf::int32 value) {
  
  sigmay_ = value;
  // @@protoc_insertion_point(field_set:Geometry_msg.PointSigma2d.sigmaY)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Geometry_msg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Geometry_2eproto
