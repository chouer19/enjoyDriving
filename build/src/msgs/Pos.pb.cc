// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Pos.proto

#include "Pos.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace Pos_msg {
class common_posDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<common_pos>
      _instance;
} _common_pos_default_instance_;
class pos320DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<pos320>
      _instance;
} _pos320_default_instance_;
}  // namespace Pos_msg
namespace protobuf_Pos_2eproto {
static void InitDefaultscommon_pos() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pos_msg::_common_pos_default_instance_;
    new (ptr) ::Pos_msg::common_pos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pos_msg::common_pos::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_common_pos =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscommon_pos}, {}};

static void InitDefaultspos320() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Pos_msg::_pos320_default_instance_;
    new (ptr) ::Pos_msg::pos320();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Pos_msg::pos320::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_pos320 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultspos320}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_common_pos.base);
  ::google::protobuf::internal::InitSCC(&scc_info_pos320.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::common_pos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::common_pos, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::common_pos, posversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::common_pos, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::common_pos, positiondeviation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::common_pos, velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::common_pos, velocitydeviation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::common_pos, orientation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::common_pos, orientationdeviation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, lat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, lon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, v_n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, v_e_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, v_earth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, a_n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, a_e_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, a_earth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, v_roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, v_pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, v_head_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, status1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, status2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, checksum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, time1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Pos_msg::pos320, time2_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Pos_msg::common_pos)},
  { 13, -1, sizeof(::Pos_msg::pos320)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pos_msg::_common_pos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Pos_msg::_pos320_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Pos.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tPos.proto\022\007Pos_msg\"\300\001\n\ncommon_pos\022\021\n\tT"
      "imestamp\030\013 \001(\004\022\022\n\nPosVersion\030\014 \001(\t\022\020\n\010Po"
      "sition\030\001 \003(\002\022\031\n\021PositionDeviation\030\002 \003(\002\022"
      "\020\n\010Velocity\030\003 \003(\002\022\031\n\021VelocityDeviation\030\004"
      " \003(\002\022\023\n\013Orientation\030\005 \003(\002\022\034\n\024Orientation"
      "Deviation\030\006 \003(\002\"\364\002\n\006pos320\022\021\n\tTimeStamp\030"
      "\001 \001(\r\022\016\n\006Length\030\020 \001(\r\022\014\n\004Mode\030\021 \001(\r\022\013\n\003N"
      "um\030\005 \001(\r\022\013\n\003Lat\030\006 \001(\002\022\013\n\003Lon\030\007 \001(\002\022\016\n\006He"
      "ight\030\010 \001(\002\022\013\n\003V_n\030\t \001(\002\022\013\n\003V_e\030\n \001(\002\022\017\n\007"
      "V_earth\030\013 \001(\002\022\014\n\004Roll\030\014 \001(\002\022\r\n\005Pitch\030\r \001"
      "(\002\022\014\n\004Head\030\016 \001(\002\022\013\n\003A_n\030\025 \001(\002\022\013\n\003A_e\030\002 \001"
      "(\002\022\017\n\007A_earth\030\003 \001(\002\022\016\n\006V_roll\030\022 \001(\002\022\017\n\007V"
      "_pitch\030\023 \001(\002\022\016\n\006V_head\030\024 \001(\002\022\017\n\007Status1\030"
      "\017 \001(\005\022\017\n\007Status2\030\026 \001(\005\022\020\n\010CheckSum\030\027 \001(\005"
      "\022\r\n\005Time1\030\030 \001(\r\022\r\n\005Time2\030\031 \001(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 598);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Pos.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Pos_2eproto
namespace Pos_msg {

// ===================================================================

void common_pos::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int common_pos::kTimestampFieldNumber;
const int common_pos::kPosVersionFieldNumber;
const int common_pos::kPositionFieldNumber;
const int common_pos::kPositionDeviationFieldNumber;
const int common_pos::kVelocityFieldNumber;
const int common_pos::kVelocityDeviationFieldNumber;
const int common_pos::kOrientationFieldNumber;
const int common_pos::kOrientationDeviationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

common_pos::common_pos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Pos_2eproto::scc_info_common_pos.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pos_msg.common_pos)
}
common_pos::common_pos(const common_pos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      position_(from.position_),
      positiondeviation_(from.positiondeviation_),
      velocity_(from.velocity_),
      velocitydeviation_(from.velocitydeviation_),
      orientation_(from.orientation_),
      orientationdeviation_(from.orientationdeviation_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  posversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.posversion().size() > 0) {
    posversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posversion_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:Pos_msg.common_pos)
}

void common_pos::SharedCtor() {
  posversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);
}

common_pos::~common_pos() {
  // @@protoc_insertion_point(destructor:Pos_msg.common_pos)
  SharedDtor();
}

void common_pos::SharedDtor() {
  posversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void common_pos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* common_pos::descriptor() {
  ::protobuf_Pos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Pos_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const common_pos& common_pos::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Pos_2eproto::scc_info_common_pos.base);
  return *internal_default_instance();
}


void common_pos::Clear() {
// @@protoc_insertion_point(message_clear_start:Pos_msg.common_pos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  position_.Clear();
  positiondeviation_.Clear();
  velocity_.Clear();
  velocitydeviation_.Clear();
  orientation_.Clear();
  orientationdeviation_.Clear();
  posversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool common_pos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pos_msg.common_pos)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float Position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_position())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_position())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float PositionDeviation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_positiondeviation())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_positiondeviation())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float Velocity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_velocity())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_velocity())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float VelocityDeviation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_velocitydeviation())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_velocitydeviation())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float Orientation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_orientation())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 42u, input, this->mutable_orientation())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float OrientationDeviation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_orientationdeviation())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 50u, input, this->mutable_orientationdeviation())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Timestamp = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PosVersion = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_posversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->posversion().data(), static_cast<int>(this->posversion().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Pos_msg.common_pos.PosVersion"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pos_msg.common_pos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pos_msg.common_pos)
  return false;
#undef DO_
}

void common_pos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pos_msg.common_pos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float Position = 1;
  if (this->position_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _position_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->position().data(), this->position_size(), output);
  }

  // repeated float PositionDeviation = 2;
  if (this->positiondeviation_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _positiondeviation_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->positiondeviation().data(), this->positiondeviation_size(), output);
  }

  // repeated float Velocity = 3;
  if (this->velocity_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _velocity_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->velocity().data(), this->velocity_size(), output);
  }

  // repeated float VelocityDeviation = 4;
  if (this->velocitydeviation_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _velocitydeviation_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->velocitydeviation().data(), this->velocitydeviation_size(), output);
  }

  // repeated float Orientation = 5;
  if (this->orientation_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _orientation_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->orientation().data(), this->orientation_size(), output);
  }

  // repeated float OrientationDeviation = 6;
  if (this->orientationdeviation_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _orientationdeviation_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->orientationdeviation().data(), this->orientationdeviation_size(), output);
  }

  // uint64 Timestamp = 11;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->timestamp(), output);
  }

  // string PosVersion = 12;
  if (this->posversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->posversion().data(), static_cast<int>(this->posversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pos_msg.common_pos.PosVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->posversion(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pos_msg.common_pos)
}

::google::protobuf::uint8* common_pos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pos_msg.common_pos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float Position = 1;
  if (this->position_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _position_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->position_, target);
  }

  // repeated float PositionDeviation = 2;
  if (this->positiondeviation_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _positiondeviation_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->positiondeviation_, target);
  }

  // repeated float Velocity = 3;
  if (this->velocity_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _velocity_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->velocity_, target);
  }

  // repeated float VelocityDeviation = 4;
  if (this->velocitydeviation_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _velocitydeviation_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->velocitydeviation_, target);
  }

  // repeated float Orientation = 5;
  if (this->orientation_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _orientation_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->orientation_, target);
  }

  // repeated float OrientationDeviation = 6;
  if (this->orientationdeviation_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _orientationdeviation_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->orientationdeviation_, target);
  }

  // uint64 Timestamp = 11;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->timestamp(), target);
  }

  // string PosVersion = 12;
  if (this->posversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->posversion().data(), static_cast<int>(this->posversion().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Pos_msg.common_pos.PosVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->posversion(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pos_msg.common_pos)
  return target;
}

size_t common_pos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pos_msg.common_pos)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float Position = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->position_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _position_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float PositionDeviation = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->positiondeviation_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _positiondeviation_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float Velocity = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->velocity_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _velocity_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float VelocityDeviation = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->velocitydeviation_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _velocitydeviation_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float Orientation = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->orientation_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _orientation_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float OrientationDeviation = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->orientationdeviation_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _orientationdeviation_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string PosVersion = 12;
  if (this->posversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->posversion());
  }

  // uint64 Timestamp = 11;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void common_pos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pos_msg.common_pos)
  GOOGLE_DCHECK_NE(&from, this);
  const common_pos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const common_pos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pos_msg.common_pos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pos_msg.common_pos)
    MergeFrom(*source);
  }
}

void common_pos::MergeFrom(const common_pos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pos_msg.common_pos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  position_.MergeFrom(from.position_);
  positiondeviation_.MergeFrom(from.positiondeviation_);
  velocity_.MergeFrom(from.velocity_);
  velocitydeviation_.MergeFrom(from.velocitydeviation_);
  orientation_.MergeFrom(from.orientation_);
  orientationdeviation_.MergeFrom(from.orientationdeviation_);
  if (from.posversion().size() > 0) {

    posversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posversion_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void common_pos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pos_msg.common_pos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void common_pos::CopyFrom(const common_pos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pos_msg.common_pos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool common_pos::IsInitialized() const {
  return true;
}

void common_pos::Swap(common_pos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void common_pos::InternalSwap(common_pos* other) {
  using std::swap;
  position_.InternalSwap(&other->position_);
  positiondeviation_.InternalSwap(&other->positiondeviation_);
  velocity_.InternalSwap(&other->velocity_);
  velocitydeviation_.InternalSwap(&other->velocitydeviation_);
  orientation_.InternalSwap(&other->orientation_);
  orientationdeviation_.InternalSwap(&other->orientationdeviation_);
  posversion_.Swap(&other->posversion_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata common_pos::GetMetadata() const {
  protobuf_Pos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Pos_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void pos320::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pos320::kTimeStampFieldNumber;
const int pos320::kLengthFieldNumber;
const int pos320::kModeFieldNumber;
const int pos320::kNumFieldNumber;
const int pos320::kLatFieldNumber;
const int pos320::kLonFieldNumber;
const int pos320::kHeightFieldNumber;
const int pos320::kVNFieldNumber;
const int pos320::kVEFieldNumber;
const int pos320::kVEarthFieldNumber;
const int pos320::kRollFieldNumber;
const int pos320::kPitchFieldNumber;
const int pos320::kHeadFieldNumber;
const int pos320::kANFieldNumber;
const int pos320::kAEFieldNumber;
const int pos320::kAEarthFieldNumber;
const int pos320::kVRollFieldNumber;
const int pos320::kVPitchFieldNumber;
const int pos320::kVHeadFieldNumber;
const int pos320::kStatus1FieldNumber;
const int pos320::kStatus2FieldNumber;
const int pos320::kCheckSumFieldNumber;
const int pos320::kTime1FieldNumber;
const int pos320::kTime2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pos320::pos320()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Pos_2eproto::scc_info_pos320.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pos_msg.pos320)
}
pos320::pos320(const pos320& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&time2_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(time2_));
  // @@protoc_insertion_point(copy_constructor:Pos_msg.pos320)
}

void pos320::SharedCtor() {
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time2_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(time2_));
}

pos320::~pos320() {
  // @@protoc_insertion_point(destructor:Pos_msg.pos320)
  SharedDtor();
}

void pos320::SharedDtor() {
}

void pos320::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* pos320::descriptor() {
  ::protobuf_Pos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Pos_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const pos320& pos320::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Pos_2eproto::scc_info_pos320.base);
  return *internal_default_instance();
}


void pos320::Clear() {
// @@protoc_insertion_point(message_clear_start:Pos_msg.pos320)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time2_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(time2_));
  _internal_metadata_.Clear();
}

bool pos320::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pos_msg.pos320)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 TimeStamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float A_e = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &a_e_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float A_earth = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &a_earth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Num = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Lat = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Lon = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Height = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float V_n = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_n_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float V_e = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_e_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float V_earth = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_earth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Roll = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Pitch = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Head = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &head_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Status1 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Length = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Mode = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float V_roll = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(149u /* 149 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float V_pitch = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(157u /* 157 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float V_head = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(165u /* 165 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_head_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float A_n = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(173u /* 173 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &a_n_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Status2 = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CheckSum = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Time1 = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Time2 = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pos_msg.pos320)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pos_msg.pos320)
  return false;
#undef DO_
}

void pos320::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pos_msg.pos320)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TimeStamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->timestamp(), output);
  }

  // float A_e = 2;
  if (this->a_e() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->a_e(), output);
  }

  // float A_earth = 3;
  if (this->a_earth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->a_earth(), output);
  }

  // uint32 Num = 5;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->num(), output);
  }

  // float Lat = 6;
  if (this->lat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->lat(), output);
  }

  // float Lon = 7;
  if (this->lon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->lon(), output);
  }

  // float Height = 8;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->height(), output);
  }

  // float V_n = 9;
  if (this->v_n() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->v_n(), output);
  }

  // float V_e = 10;
  if (this->v_e() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->v_e(), output);
  }

  // float V_earth = 11;
  if (this->v_earth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->v_earth(), output);
  }

  // float Roll = 12;
  if (this->roll() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->roll(), output);
  }

  // float Pitch = 13;
  if (this->pitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->pitch(), output);
  }

  // float Head = 14;
  if (this->head() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->head(), output);
  }

  // int32 Status1 = 15;
  if (this->status1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->status1(), output);
  }

  // uint32 Length = 16;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->length(), output);
  }

  // uint32 Mode = 17;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->mode(), output);
  }

  // float V_roll = 18;
  if (this->v_roll() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(18, this->v_roll(), output);
  }

  // float V_pitch = 19;
  if (this->v_pitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->v_pitch(), output);
  }

  // float V_head = 20;
  if (this->v_head() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(20, this->v_head(), output);
  }

  // float A_n = 21;
  if (this->a_n() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(21, this->a_n(), output);
  }

  // int32 Status2 = 22;
  if (this->status2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->status2(), output);
  }

  // int32 CheckSum = 23;
  if (this->checksum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->checksum(), output);
  }

  // uint32 Time1 = 24;
  if (this->time1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->time1(), output);
  }

  // uint32 Time2 = 25;
  if (this->time2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->time2(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Pos_msg.pos320)
}

::google::protobuf::uint8* pos320::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Pos_msg.pos320)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TimeStamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->timestamp(), target);
  }

  // float A_e = 2;
  if (this->a_e() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->a_e(), target);
  }

  // float A_earth = 3;
  if (this->a_earth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->a_earth(), target);
  }

  // uint32 Num = 5;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->num(), target);
  }

  // float Lat = 6;
  if (this->lat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->lat(), target);
  }

  // float Lon = 7;
  if (this->lon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->lon(), target);
  }

  // float Height = 8;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->height(), target);
  }

  // float V_n = 9;
  if (this->v_n() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->v_n(), target);
  }

  // float V_e = 10;
  if (this->v_e() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->v_e(), target);
  }

  // float V_earth = 11;
  if (this->v_earth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->v_earth(), target);
  }

  // float Roll = 12;
  if (this->roll() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->roll(), target);
  }

  // float Pitch = 13;
  if (this->pitch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->pitch(), target);
  }

  // float Head = 14;
  if (this->head() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->head(), target);
  }

  // int32 Status1 = 15;
  if (this->status1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->status1(), target);
  }

  // uint32 Length = 16;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->length(), target);
  }

  // uint32 Mode = 17;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->mode(), target);
  }

  // float V_roll = 18;
  if (this->v_roll() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(18, this->v_roll(), target);
  }

  // float V_pitch = 19;
  if (this->v_pitch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->v_pitch(), target);
  }

  // float V_head = 20;
  if (this->v_head() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(20, this->v_head(), target);
  }

  // float A_n = 21;
  if (this->a_n() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(21, this->a_n(), target);
  }

  // int32 Status2 = 22;
  if (this->status2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->status2(), target);
  }

  // int32 CheckSum = 23;
  if (this->checksum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->checksum(), target);
  }

  // uint32 Time1 = 24;
  if (this->time1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->time1(), target);
  }

  // uint32 Time2 = 25;
  if (this->time2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->time2(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Pos_msg.pos320)
  return target;
}

size_t pos320::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Pos_msg.pos320)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 TimeStamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp());
  }

  // float A_e = 2;
  if (this->a_e() != 0) {
    total_size += 1 + 4;
  }

  // float A_earth = 3;
  if (this->a_earth() != 0) {
    total_size += 1 + 4;
  }

  // uint32 Num = 5;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num());
  }

  // float Lat = 6;
  if (this->lat() != 0) {
    total_size += 1 + 4;
  }

  // float Lon = 7;
  if (this->lon() != 0) {
    total_size += 1 + 4;
  }

  // float Height = 8;
  if (this->height() != 0) {
    total_size += 1 + 4;
  }

  // float V_n = 9;
  if (this->v_n() != 0) {
    total_size += 1 + 4;
  }

  // float V_e = 10;
  if (this->v_e() != 0) {
    total_size += 1 + 4;
  }

  // float V_earth = 11;
  if (this->v_earth() != 0) {
    total_size += 1 + 4;
  }

  // float Roll = 12;
  if (this->roll() != 0) {
    total_size += 1 + 4;
  }

  // float Pitch = 13;
  if (this->pitch() != 0) {
    total_size += 1 + 4;
  }

  // float Head = 14;
  if (this->head() != 0) {
    total_size += 1 + 4;
  }

  // int32 Status1 = 15;
  if (this->status1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status1());
  }

  // uint32 Length = 16;
  if (this->length() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->length());
  }

  // uint32 Mode = 17;
  if (this->mode() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mode());
  }

  // float V_roll = 18;
  if (this->v_roll() != 0) {
    total_size += 2 + 4;
  }

  // float V_pitch = 19;
  if (this->v_pitch() != 0) {
    total_size += 2 + 4;
  }

  // float V_head = 20;
  if (this->v_head() != 0) {
    total_size += 2 + 4;
  }

  // float A_n = 21;
  if (this->a_n() != 0) {
    total_size += 2 + 4;
  }

  // int32 Status2 = 22;
  if (this->status2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status2());
  }

  // int32 CheckSum = 23;
  if (this->checksum() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->checksum());
  }

  // uint32 Time1 = 24;
  if (this->time1() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->time1());
  }

  // uint32 Time2 = 25;
  if (this->time2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->time2());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void pos320::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pos_msg.pos320)
  GOOGLE_DCHECK_NE(&from, this);
  const pos320* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pos320>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pos_msg.pos320)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pos_msg.pos320)
    MergeFrom(*source);
  }
}

void pos320::MergeFrom(const pos320& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pos_msg.pos320)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.a_e() != 0) {
    set_a_e(from.a_e());
  }
  if (from.a_earth() != 0) {
    set_a_earth(from.a_earth());
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
  if (from.lat() != 0) {
    set_lat(from.lat());
  }
  if (from.lon() != 0) {
    set_lon(from.lon());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.v_n() != 0) {
    set_v_n(from.v_n());
  }
  if (from.v_e() != 0) {
    set_v_e(from.v_e());
  }
  if (from.v_earth() != 0) {
    set_v_earth(from.v_earth());
  }
  if (from.roll() != 0) {
    set_roll(from.roll());
  }
  if (from.pitch() != 0) {
    set_pitch(from.pitch());
  }
  if (from.head() != 0) {
    set_head(from.head());
  }
  if (from.status1() != 0) {
    set_status1(from.status1());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.v_roll() != 0) {
    set_v_roll(from.v_roll());
  }
  if (from.v_pitch() != 0) {
    set_v_pitch(from.v_pitch());
  }
  if (from.v_head() != 0) {
    set_v_head(from.v_head());
  }
  if (from.a_n() != 0) {
    set_a_n(from.a_n());
  }
  if (from.status2() != 0) {
    set_status2(from.status2());
  }
  if (from.checksum() != 0) {
    set_checksum(from.checksum());
  }
  if (from.time1() != 0) {
    set_time1(from.time1());
  }
  if (from.time2() != 0) {
    set_time2(from.time2());
  }
}

void pos320::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pos_msg.pos320)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pos320::CopyFrom(const pos320& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pos_msg.pos320)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pos320::IsInitialized() const {
  return true;
}

void pos320::Swap(pos320* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pos320::InternalSwap(pos320* other) {
  using std::swap;
  swap(timestamp_, other->timestamp_);
  swap(a_e_, other->a_e_);
  swap(a_earth_, other->a_earth_);
  swap(num_, other->num_);
  swap(lat_, other->lat_);
  swap(lon_, other->lon_);
  swap(height_, other->height_);
  swap(v_n_, other->v_n_);
  swap(v_e_, other->v_e_);
  swap(v_earth_, other->v_earth_);
  swap(roll_, other->roll_);
  swap(pitch_, other->pitch_);
  swap(head_, other->head_);
  swap(status1_, other->status1_);
  swap(length_, other->length_);
  swap(mode_, other->mode_);
  swap(v_roll_, other->v_roll_);
  swap(v_pitch_, other->v_pitch_);
  swap(v_head_, other->v_head_);
  swap(a_n_, other->a_n_);
  swap(status2_, other->status2_);
  swap(checksum_, other->checksum_);
  swap(time1_, other->time1_);
  swap(time2_, other->time2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata pos320::GetMetadata() const {
  protobuf_Pos_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Pos_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Pos_msg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pos_msg::common_pos* Arena::CreateMaybeMessage< ::Pos_msg::common_pos >(Arena* arena) {
  return Arena::CreateInternal< ::Pos_msg::common_pos >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Pos_msg::pos320* Arena::CreateMaybeMessage< ::Pos_msg::pos320 >(Arena* arena) {
  return Arena::CreateInternal< ::Pos_msg::pos320 >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
